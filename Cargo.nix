
# Generated by crate2nix 0.6.0-alpha.0 with the command:
#   "generate" "-n" "./nixpkgs.nix" "-o" "./Cargo.nix"
# See https://github.com/kolloch/crate2nix for more info.

{ pkgs? import ./nixpkgs.nix { config = {}; },
  lib? pkgs.lib,
  callPackage? pkgs.callPackage,
  stdenv? pkgs.stdenv,
  buildRustCrate? pkgs.buildRustCrate,
  fetchurl? pkgs.fetchurl,
  fetchCrate? pkgs.fetchCrate,
  # The features to enable for the root_crate or the workspace_members.
  rootFeatures? ["default"]}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  rootCrate = {
    packageId = "crate2nix 0.6.0-alpha.0 (path+file:///home/peter/projects/crate2nix)";

    # Use this attribute to refer to the derivation building your root crate package.
    # You can override the features with rootCrate.build.override { features = [ "default" "feature1" ... ]; }.
    build = buildRustCrateWithFeatures {
      packageId = "crate2nix 0.6.0-alpha.0 (path+file:///home/peter/projects/crate2nix)";
      features = rootFeatures;
    };
  };
  root_crate =
    builtins.trace "root_crate is deprecated since crate2nix 0.4. Please use rootCrate instead." rootCrate.build;
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "crate2nix" = {
      packageId = "crate2nix 0.6.0-alpha.0 (path+file:///home/peter/projects/crate2nix)";
      build = buildRustCrateWithFeatures {
        packageId = "crate2nix 0.6.0-alpha.0 (path+file:///home/peter/projects/crate2nix)";
        features = rootFeatures;
      };
    };
  };
  workspace_members =
    builtins.trace
      "workspace_members is deprecated in crate2nix 0.4. Please use workspaceMembers instead."
      lib.mapAttrs (n: v: v.build) workspaceMembers;

  #
  # "private" attributes that may change in every new version of crate2nix.
  #

  # Build and dependency information for crates.
  # Many of the fields are passed one-to-one to buildRustCrate.
  #
  # Noteworthy:
  # * `crateBin = [{name = ","; path = ",";}];`: a hack to disable building the binary.
  # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
  #   but with additional information which is used during dependency/feature resolution.
  # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.

  crates = {
    "aho-corasick 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "aho-corasick";
        version = "0.7.3";
        edition = "2015";
        sha256 = "0dn42fbdms4brigqphxrvzbjd1s4knyjlzky30kgvpnrcl4sqqdv";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "memchr" = {
            packageId = "memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" ];
          };
        };
        features = {
        };
      };
    "arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "arrayvec";
        version = "0.4.10";
        edition = "2015";
        sha256 = "0qbh825i59w5wfdysqdkiwbwkrsy7lgbd4pwbyb8pxx8wc36iny8";
        authors = [
          "bluss"
        ];
        dependencies = {
          "nodrop" = {
            packageId = "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "serde-1" = [ "serde" ];
        };
      };
    "atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "atty";
        version = "0.2.11";
        edition = "2015";
        sha256 = "0by1bj2km9jxi4i4g76zzi76fc2rcm9934jpnyrqd95zw344pb20";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "termion" = {
            packageId = "termion 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          };
        };
        features = {
        };
      };
    "autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "autocfg";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0dv81dwnp1al3j4ffz007yrjv4w1c7hw09gnf0xs3icxiw6qqfs3";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        features = {
        };
      };
    "backtrace 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace";
        version = "0.3.15";
        edition = "2015";
        sha256 = "0qgbc07aq9kfixv29s60xx666lmdpgmf27a78fwjlhnfzhqvkn0p";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "The Rust Project Developers"
        ];
        dependencies = {
          "backtrace-sys" = {
            packageId = "backtrace-sys 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (target."unix" && (!(target."os" == "fuchsia")) && (!(target."os" == "emscripten")) && (!(target."os" == "macos")) && (!(target."os" == "ios")));
          };
          "cfg-if" = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = (target."unix" || (target."env" == "sgx"));
          };
          "rustc-demangle" = "rustc-demangle 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "dbghelp" "processthreadsapi" "winnt" "minwindef" ];
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" "libunwind" "libbacktrace" "coresymbolication" "dladdr" "dbghelp" ];
          "gimli-symbolize" = [ "addr2line" "findshlibs" "gimli" "memmap" "object" ];
          "libbacktrace" = [ "backtrace-sys" "std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "backtrace-sys" "coresymbolication" "dbghelp" "default" "dladdr" "libbacktrace" "libunwind" "std" ];
      };
    "backtrace-sys 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace-sys";
        version = "0.1.28";
        edition = "2015";
        sha256 = "1bbw8chs0wskxwzz7f3yy7mjqhyqj8lslq8pcjw1rbd2g23c34xl";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "cc" = "cc 1.0.36 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "bitflags 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bitflags";
        version = "1.0.5";
        edition = "2015";
        sha256 = "0brvi70yflsqa8q6myqjpqmmqa0ng00mi4hpnfinc2y52sv76cwg";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "block-buffer 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "block-buffer";
        version = "0.7.3";
        edition = "2015";
        sha256 = "0kryp6l1ia1f5vxmmzggx0pnc5zqxm6m9m9wvh5y0b3wdcj5xm1v";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "block-padding" = "block-padding 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "byte-tools" = "byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "byteorder" = {
            packageId = "byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "generic-array" = "generic-array 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "block-padding 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "block-padding";
        version = "0.1.4";
        edition = "2015";
        sha256 = "08xvr2spxn614x5scn1wsv8a8daslmj1b3n94n644ygb13gsq8zq";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "byte-tools" = "byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "bstr 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bstr";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1m30sssr8qghgf5fg17vvlrcr5mbbnv8fixzzfvzk3nan4bxyckf";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "memchr" = {
            packageId = "memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" "unicode" ];
          "serde1" = [ "std" "serde1-nostd" "serde/std" ];
          "serde1-nostd" = [ "serde" ];
          "std" = [ "memchr/use_std" ];
          "unicode" = [ "lazy_static" "regex-automata" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "byte-tools";
        version = "0.3.1";
        edition = "2015";
        sha256 = "01hfp59bxq74glhfmhvm9wma2migq2kfmvcvqq5pssk5k52g8ja0";
        authors = [
          "RustCrypto Developers"
        ];
        features = {
        };
      };
    "byteorder 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "byteorder";
        version = "1.3.1";
        edition = "2015";
        sha256 = "1dd46l7fvmxfq90kh6ip1ghsxzzcdybac8f0mh2jivsdv9vy8k4w";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
    "cargo_metadata 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cargo_metadata";
        version = "0.7.4";
        edition = "2015";
        sha256 = "1dhri0yf50hc1ra47jycivmp5cz4ws9qrahymrkcv8ynnjs7cvr9";
        authors = [
          "Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de>"
        ];
        dependencies = {
          "error-chain" = {
            packageId = "error-chain 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "semver" = {
            packageId = "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "serde" ];
          };
          "serde" = "serde 1.0.90 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde_derive" = "serde_derive 1.0.90 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde_json" = "serde_json 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "backtrace" = [ "error-chain/backtrace" ];
          "default" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" ];
      };
    "cc 1.0.36 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cc";
        version = "1.0.36";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "0yk9f8fcsp9qk00qbj8idsnjv29v5arp3w5awgggf5kg571djjx7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "parallel" = [ "rayon" ];
        };
      };
    "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cfg-if";
        version = "0.1.7";
        edition = "2015";
        sha256 = "13gvcx1dxjq4mpmpj26hpg3yc97qffkx2zi58ykr1dwr8q2biiig";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "chrono 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "chrono";
        version = "0.4.6";
        edition = "2015";
        sha256 = "0cxgqgf4lknsii1k806dpmzapi2zccjpa350ns5wpb568mij096x";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
          "Brandon W Maister <quodlibetor@gmail.com>"
        ];
        dependencies = {
          "num-integer" = {
            packageId = "num-integer 0.1.39 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "num-traits" = {
            packageId = "num-traits 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "time" = {
            packageId = "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "clock" = [ "time" ];
          "default" = [ "clock" ];
        };
        resolvedDefaultFeatures = [ "clock" "default" "time" ];
      };
    "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "clap";
        version = "2.33.0";
        edition = "2015";
        sha256 = "054n9ngh6pkknpmd4acgdsp40iw6f5jzq8a4h2b76gnbvk6p5xjh";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = {
          "ansi_term" = {
            packageId = "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (!target."windows");
          };
          "atty" = {
            packageId = "atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "bitflags" = "bitflags 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "strsim" = {
            packageId = "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "textwrap" = "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-width" = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "vec_map" = {
            packageId = "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
    "clap-verbosity-flag 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "clap-verbosity-flag";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1239fnlr2wzrhwh17gcahda8gv8xrk3884i6j2dy3h8612ibkiq2";
        authors = [
          "Pascal Hertleif <killercup@gmail.com>"
        ];
        dependencies = {
          "env_logger" = "env_logger 0.5.13 (registry+https://github.com/rust-lang/crates.io-index)";
          "failure" = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "structopt" = "structopt 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crate2nix 0.6.0-alpha.0 (path+file:///home/peter/projects/crate2nix)"
      = rec {
        crateName = "crate2nix";
        version = "0.6.0-alpha.0";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ./.);
        authors = [
          "Peter Kolloch <info@eigenvalue.net>"
        ];
        dependencies = {
          "cargo_metadata" = "cargo_metadata 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "failure" = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "pathdiff" = "pathdiff 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "quicli" = "quicli 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "semver" = "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = "serde 1.0.90 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde_derive" = "serde_derive 1.0.90 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde_json" = "serde_json 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)";
          "structopt" = "structopt 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)";
          "tera" = "tera 1.0.0-beta.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "toml" = "toml 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "url" = "url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "url_serde" = "url_serde 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crossbeam-channel 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-channel";
        version = "0.3.8";
        edition = "2015";
        sha256 = "0apm8why2qsgr8ykh9x677kc9ml7qp71mvirfkdzdn4c1jyqyyzm";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "crossbeam-utils" = "crossbeam-utils 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "smallvec" = "smallvec 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-deque";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1h3n1p1qy45b6388j3svfy1m72xlcx9j9a5y0mww6jz8fmknipnb";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "crossbeam-epoch" = "crossbeam-epoch 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = "crossbeam-utils 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crossbeam-epoch 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-epoch";
        version = "0.3.1";
        edition = "2015";
        sha256 = "1ljrrpvalabi3r2nnpcz7rqkbl2ydmd0mrrr2fv335f7d46xgfxa";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "arrayvec" = {
            packageId = "arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "cfg-if" = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = {
            packageId = "crossbeam-utils 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "lazy_static" = {
            packageId = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "memoffset" = "memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "nodrop" = {
            packageId = "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "scopeguard" = {
            packageId = "scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "use_std" ];
          "nightly" = [ "arrayvec/use_union" ];
          "use_std" = [ "lazy_static" "crossbeam-utils/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "use_std" ];
      };
    "crossbeam-utils 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-utils";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0jiwzxv0lysjq68yk4bzkygrf69zhdidyw55nxlmimxlm6xv0j4m";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "crossbeam-utils 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-utils";
        version = "0.6.5";
        edition = "2015";
        sha256 = "1z7wgcl9d22r2x6769r5945rnwf3jqfrrmb16q7kzk292r1d4rdg";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = {
            packageId = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "deunicode 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "deunicode";
        version = "0.4.3";
        edition = "2015";
        sha256 = "138gv1cadzf9pf6i2wnmsbk927zfivpp0g74c1jnp7z3g4mwfdgl";
        authors = [
          "Kornel Lesinski <kornel@geekhood.net>"
          "Amit Chowdhury <amitc97@gmail.com>"
        ];
        features = {
        };
      };
    "digest 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "digest";
        version = "0.8.0";
        edition = "2015";
        sha256 = "1bsddd8vdmncmprks8b392yccf132wjwzrcy5wdy1kh05qm23il8";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "generic-array" = "generic-array 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "dev" = [ "blobby" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "either 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "either";
        version = "1.5.2";
        edition = "2015";
        sha256 = "1zqq1057c51f53ga4p9l4dd8ax6md27h1xjrjp2plkvml5iymks5";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
    "env_logger 0.5.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "env_logger";
        version = "0.5.13";
        edition = "2015";
        sha256 = "1q6vylngcz4bn088b4hvsl879l8yz1k2bma75waljb5p4h4kbb72";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "atty" = "atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "humantime" = "humantime 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = {
            packageId = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          };
          "regex" = {
            packageId = "regex 1.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "termcolor" = "termcolor 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "regex" ];
        };
        resolvedDefaultFeatures = [ "default" "regex" ];
      };
    "error-chain 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "error-chain";
        version = "0.12.0";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "1m6wk1r6wqg1mn69bxxvk5k081cb4xy6bfhsxb99rv408x9wjcnl";
        authors = [
          "Brian Anderson <banderson@mozilla.com>"
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
          "Yamakaky <yamakaky@yamaworld.fr>"
        ];
        dependencies = {
          "backtrace" = {
            packageId = "backtrace 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "backtrace" "example_generated" ];
        };
        resolvedDefaultFeatures = [ "backtrace" ];
      };
    "exitfailure 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "exitfailure";
        version = "0.5.1";
        edition = "2015";
        sha256 = "1whplv77hdg306g7vbp3v85gddif459dirxpbhnr2xd3mqrdibwx";
        authors = [
          "Toby Smith <toby@tismith.id.au>"
        ];
        dependencies = {
          "failure" = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "failure";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1msaj1c0fg12dzyf4fhxqlx1gfx41lj2smdjmkc9hkrgajk2g3kx";
        authors = [
          "Without Boats <boats@mozilla.com>"
        ];
        dependencies = {
          "backtrace" = {
            packageId = "backtrace 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "failure_derive" = {
            packageId = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "derive" "failure_derive" "std" ];
      };
    "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "failure_derive";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1wzk484b87r4qszcvdl2bkniv5ls4r2f2dshz7hmgiv6z4ln12g0";
        procMacro = true;
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.29 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 0.15.33 (registry+https://github.com/rust-lang/crates.io-index)";
          "synstructure" = "synstructure 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "fake-simd 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fake-simd";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1a0f1j66nkwfy17s06vm2bn9vh8vy8llcijfhh9m10p58v08661a";
        authors = [
          "The Rust-Crypto Project Developers"
        ];
        features = {
        };
      };
    "fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fnv";
        version = "1.0.6";
        edition = "2015";
        sha256 = "128mlh23y3gg6ag5h8iiqlcbl59smisdzraqy88ldrf75kbw27ip";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "generic-array 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "generic-array";
        version = "0.12.0";
        edition = "2015";
        sha256 = "12fjpkx1ilqlmynis45g0gh69zkad6jnsc589j64z3idk18lvv91";
        libName = "generic_array";
        authors = [
          "Bartłomiej Kamiński <fizyk20@gmail.com>"
          "Aaron Trent <novacrazy@gmail.com>"
        ];
        dependencies = {
          "typenum" = "typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "globset 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "globset";
        version = "0.4.3";
        edition = "2015";
        sha256 = "0vj99vw55mp7w44p1157f9c44q5lms6sn0mllhavwrwdn3iyfrij";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "aho-corasick" = "aho-corasick 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "bstr" = {
            packageId = "bstr 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          };
          "fnv" = "fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "regex" = "regex 1.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "globwalk 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "globwalk";
        version = "0.3.1";
        edition = "2015";
        sha256 = "1vz6164dhp35hjll34drk0f0lvz8jin0919m6jmkj132kwf5m38b";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        dependencies = {
          "ignore" = "ignore 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "walkdir" = "walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "globwalk 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "globwalk";
        version = "0.7.0";
        edition = "2015";
        sha256 = "0i9d51hb06m4pq1mnk3x2rxi60283yhjw6my3i0nhpjsf97hrqfj";
        authors = [
          "Gilad Naaman <gilad@naaman.io>"
        ];
        dependencies = {
          "ignore" = "ignore 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "walkdir" = "walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "heck";
        version = "0.3.1";
        edition = "2015";
        sha256 = "1q7vmnlh62kls6cvkfhbcacxkawaznaqa5wwm9dg1xkcza846c3d";
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = {
          "unicode-segmentation" = "unicode-segmentation 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "humansize 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "humansize";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1s7jj570vz90b7wsgd24lla1yn9qp3swgv9c7jgkgrw6bxynbv0p";
        authors = [
          "Leopold Arkham <leopold.arkham@gmail.com>"
        ];
        features = {
        };
      };
    "humantime 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "humantime";
        version = "1.2.0";
        edition = "2015";
        sha256 = "0wlcxzz2mhq0brkfbjb12hc6jm17bgm8m6pdgblw4qjwmf26aw28";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];
        dependencies = {
          "quick-error" = "quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "idna 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "idna";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1gwgl19rz5vzi67rrhamczhxy050f5ynx4ybabfapyalv7z1qmjy";
        authors = [
          "The rust-url developers"
        ];
        dependencies = {
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-bidi" = "unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-normalization" = "unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "ignore 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ignore";
        version = "0.4.7";
        edition = "2015";
        sha256 = "10ky0pnkzk6spa416sxvhcpc1nxq56n6mxkmhzy3ws57x9v75nkj";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "crossbeam-channel" = "crossbeam-channel 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "globset" = "globset 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "memchr" = "memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "regex" = "regex 1.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "same-file" = "same-file 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "thread_local" = "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "walkdir" = "walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi-util" = {
            packageId = "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
        };
        features = {
          "simd-accel" = [ "globset/simd-accel" ];
        };
      };
    "itoa 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "itoa";
        version = "0.4.4";
        edition = "2015";
        sha256 = "1fqc34xzzl2spfdawxd9awhzl0fwf1y6y4i94l8bq8rfrzd90awl";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lazy_static";
        version = "1.3.0";
        edition = "2015";
        sha256 = "1vv47va18ydk7dx5paz88g3jy1d3lwbx6qpxkbj8gyfv770i4b1y";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
    "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libc";
        version = "0.2.54";
        edition = "2015";
        sha256 = "11nrsbpmwcnfrjcds0wnicwwql3809nq6q6z00q920bdpryyaf58";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "use_std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "log";
        version = "0.4.6";
        edition = "2015";
        sha256 = "1nd8dl9mvc9vd6fks5d4gsxaz990xi6rzlb8ymllshmwi153vngr";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "maplit 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "maplit";
        version = "1.0.1";
        edition = "2015";
        sha256 = "1lcadhrcy2qyb6zazmzj7gvgb50rmlvkcivw287016j4q723x72g";
        authors = [
          "bluss"
        ];
        features = {
        };
      };
    "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "matches";
        version = "0.1.8";
        edition = "2015";
        sha256 = "03hl636fg6xggy0a26200xs74amk3k9n0908rga2szn68agyz3cv";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
        };
      };
    "memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memchr";
        version = "2.2.0";
        edition = "2015";
        sha256 = "11vwg8iig9jyjxq3n1cq15g29ikzw5l7ar87md54k1aisjs0997p";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memoffset";
        version = "0.2.1";
        edition = "2015";
        sha256 = "00vym01jk9slibq2nsiilgffp7n6k52a4q3n4dqp0xf5kzxvffcf";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        features = {
        };
      };
    "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "nodrop";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0gkfx6wihr9z0m8nbdhma5pyvbipznjpkzny2d4zkc05b0vnhinb";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_union" = [ "nodrop-union" ];
        };
      };
    "nom 4.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "nom";
        version = "4.2.3";
        edition = "2015";
        sha256 = "0rg7n0nif70052wlaffmgxmmlvi6xm7zpqmzfq9d8wr9376lpn2h";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = {
          "memchr" = {
            packageId = "memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "version_check" = "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
          "verbose-errors" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
    "num-integer 0.1.39 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-integer";
        version = "0.1.39";
        edition = "2015";
        sha256 = "1f42ls46cghs13qfzgbd7syib2zc6m7hlmv1qlar6c9mdxapvvbg";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "num-traits" = {
            packageId = "num-traits 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
      };
    "num-traits 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-traits";
        version = "0.2.6";
        edition = "2015";
        sha256 = "1d20sil9n0wgznd1nycm3yjfj1mzyl41ambb7by1apxlyiil1azk";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
    "num_cpus 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num_cpus";
        version = "1.10.0";
        edition = "2015";
        sha256 = "1411jyxy1wd8d59mv7cf6ynkvvar92czmwhb9l2c1brdkxbbiqn7";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "numtoa 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "numtoa";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1i2wxr96bb1rvax15z843126z3bnl2frpx69vxsp95r96wr24j08";
        authors = [
          "Michael Aaron Murphy <mmstickman@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "opaque-debug 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "opaque-debug";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0dkzsnxpg50gz3gjcdzc4j6g4s0jphllg6q7jqmsy9nd9glidy74";
        authors = [
          "RustCrypto Developers"
        ];
        features = {
        };
      };
    "pathdiff 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pathdiff";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0fbxl40g04jr7yh63i4031khj3a91f2m6yavlkca95w2bcvgyn3c";
        authors = [
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
        };
      };
    "percent-encoding 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "percent-encoding";
        version = "1.0.1";
        edition = "2015";
        sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];
        features = {
        };
      };
    "pest 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pest";
        version = "2.1.1";
        edition = "2015";
        sha256 = "04jqa0kx3j3r729ny0n8rx6hg1km1lgj32767ivk0qxs8y0iln44";
        authors = [
          "Dragoș Tiselice <dragostiselice@gmail.com>"
        ];
        dependencies = {
          "ucd-trie" = "ucd-trie 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "pretty-print" = [ "serde" "serde_json" ];
        };
      };
    "pest_derive 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pest_derive";
        version = "2.1.0";
        edition = "2015";
        sha256 = "03bsaw7jpsk6x3dbrs9bjx5najjdvslb9y77azfn1n403khrqvnm";
        procMacro = true;
        authors = [
          "Dragoș Tiselice <dragostiselice@gmail.com>"
        ];
        dependencies = {
          "pest" = "pest 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "pest_generator" = "pest_generator 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "pest_generator 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pest_generator";
        version = "2.1.0";
        edition = "2015";
        sha256 = "089vf75na5md5jip3gl6m6k97x7qq195jxqvgxi8pa6vcszy4a50";
        authors = [
          "Dragoș Tiselice <dragostiselice@gmail.com>"
        ];
        dependencies = {
          "pest" = "pest 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "pest_meta" = "pest_meta 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro2" = "proc-macro2 0.4.29 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 0.15.33 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "pest_meta 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pest_meta";
        version = "2.1.1";
        edition = "2015";
        sha256 = "16fm6ii2rmlm092nm64dzdnalcs14kxx0jqagxk41w76ghy05l71";
        authors = [
          "Dragoș Tiselice <dragostiselice@gmail.com>"
        ];
        dependencies = {
          "maplit" = "maplit 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "pest" = "pest 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "sha-1" = "sha-1 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "proc-macro2 0.4.29 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro2";
        version = "0.4.29";
        edition = "2015";
        sha256 = "08jfiqzh7drl67061aiwv9g93rpzydg39wvsyw4jn2h3n6chw1x3";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quick-error";
        version = "1.2.2";
        edition = "2015";
        sha256 = "192a3adc5phgpibgqblsdx1b421l5yg9bjbmv552qqq9f37h60k5";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];
        features = {
        };
      };
    "quicli 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quicli";
        version = "0.4.0";
        edition = "2018";
        sha256 = "17d235z7gfzspa4dxzhjj7r5hz4zcgqk9y0gs32596ky24290cd9";
        authors = [
          "Pascal Hertleif <killercup@gmail.com>"
        ];
        dependencies = {
          "clap-verbosity-flag" = "clap-verbosity-flag 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "exitfailure" = "exitfailure 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "failure" = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "failure_derive" = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "globwalk" = {
            packageId = "globwalk 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "rayon" = {
            packageId = "rayon 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "remove_dir_all" = {
            packageId = "remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "serde" = {
            packageId = "serde 1.0.90 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "serde_derive" = {
            packageId = "serde_derive 1.0.90 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "full-throttle" ];
          "full-throttle" = [ "serde" "serde_derive" "globwalk" "rayon" "remove_dir_all" ];
        };
        resolvedDefaultFeatures = [ "default" "full-throttle" "globwalk" "rayon" "remove_dir_all" "serde" "serde_derive" ];
      };
    "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quote";
        version = "0.6.12";
        edition = "2015";
        sha256 = "1ckd2d2sy0hrwrqcr47dn0n3hyh7ygpc026l8xaycccyg27mihv9";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 0.4.29 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "rayon 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rayon";
        version = "1.0.3";
        edition = "2015";
        sha256 = "0bmwk0l5nbx20a5x16dhrgrmkh3m40v6i0qs2gi2iqimlszyhq93";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = {
          "crossbeam-deque" = "crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "either" = {
            packageId = "either 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rayon-core" = "rayon-core 1.4.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rayon-core 1.4.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rayon-core";
        version = "1.4.1";
        edition = "2015";
        sha256 = "01xf3mwmmji7yaarrpzpqjhz928ajxkwmjczbwmnpy39y95m4fbn";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = {
          "crossbeam-deque" = "crossbeam-deque 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
          "num_cpus" = "num_cpus 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "redox_syscall 0.1.54 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_syscall";
        version = "0.1.54";
        edition = "2015";
        sha256 = "1ndcp7brnvii87ndcd34fk846498r07iznphkslcy0shic9cp4rr";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        features = {
        };
      };
    "redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_termios";
        version = "0.1.1";
        edition = "2015";
        sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = {
          "redox_syscall" = "redox_syscall 0.1.54 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "regex 1.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex";
        version = "1.1.6";
        edition = "2015";
        sha256 = "1yynvabg03m5f65qxcw70qckkfjwi9xyfpjdp6yq7pk0xf0ydc0b";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "aho-corasick" = "aho-corasick 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "memchr" = "memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "regex-syntax" = "regex-syntax 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "thread_local" = "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "utf8-ranges" = "utf8-ranges 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "use_std" ];
          "unstable" = [ "pattern" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "regex-syntax 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex-syntax";
        version = "0.6.6";
        edition = "2015";
        sha256 = "1cjrdc3affa3rjfaxkp91xnf9k0fsqn9z4xqc280vv39nvrl8p8b";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "ucd-util" = "ucd-util 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "remove_dir_all";
        version = "0.5.1";
        edition = "2015";
        sha256 = "1chx3yvfbj46xjz4bzsvps208l46hfbcy0sm98gpiya454n4rrl7";
        authors = [
          "Aaronepower <theaaronepower@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "errhandlingapi" "winerror" "fileapi" "winbase" ];
          };
        };
        features = {
        };
      };
    "rustc-demangle 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustc-demangle";
        version = "0.1.14";
        edition = "2015";
        sha256 = "07vl0ms3a27fpry9kh9piv08w7d51i5m7bgphk7pw4jygwzdy31f";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "ryu 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ryu";
        version = "0.2.8";
        edition = "2015";
        sha256 = "1qd0ni13w19a97y51vm31biyh2pvz8j9gi78rn5in912mi04xcnk";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
    "same-file 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "same-file";
        version = "1.0.4";
        edition = "2015";
        sha256 = "1zs244ssl381cqlnh2g42g3i60qip4z72i26z44d6kas3y3gy77q";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "winapi-util" = {
            packageId = "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
        };
        features = {
        };
      };
    "scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "scopeguard";
        version = "0.3.3";
        edition = "2015";
        sha256 = "0i1l013csrqzfz6c68pr5pi01hg5v5yahq8fsdmaxy6p8ygsjf3r";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
    "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "0azak2lb2wc36s3x15az886kck7rpnksrw14lalm157rg9sc9z63";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = {
          "semver-parser" = "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = {
            packageId = "serde 1.0.90 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "ci" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" ];
      };
    "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1da66c8413yakx0y15k8c055yna5lyb6fr0fw9318kdwkrk5k12h";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];
        features = {
        };
      };
    "serde 1.0.90 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde";
        version = "1.0.90";
        edition = "2015";
        sha256 = "10b6n74m1dvb667vrn1db47ncb4h0mkqbg1dsamqjvv5vl5b5j56";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "alloc" = [ "unstable" ];
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "serde_derive 1.0.90 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde_derive";
        version = "1.0.90";
        edition = "2015";
        sha256 = "1m4xgyl8jj3mxj0wszminzc1qf2gbkj9dpl17vi95nwl6m7i157y";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.29 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 0.15.33 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" ];
          };
        };
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "serde_json 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde_json";
        version = "1.0.39";
        edition = "2015";
        sha256 = "07ydv06hn8x0yl0rc94l2wl9r2xz1fqd97n1s6j3bgdc6gw406a8";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "itoa" = "itoa 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "ryu" = "ryu 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = "serde 1.0.90 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "sha-1 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "sha-1";
        version = "0.8.1";
        edition = "2015";
        sha256 = "0pls9la06vkz4kjm79vcls00bp3p56wgvcj5x8d9bnjxhjj17kkp";
        libName = "sha1";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "block-buffer" = "block-buffer 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "digest" = "digest 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "fake-simd" = "fake-simd 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "opaque-debug" = "opaque-debug 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "asm" = [ "sha1-asm" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "slug 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "slug";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0ijcaqi7mxbib6jag9ldjph9kd3ajh13rajqmzpvd3nqn5mdk6p4";
        authors = [
          "Steven Allen <steven@stebalien.com>"
        ];
        dependencies = {
          "deunicode" = "deunicode 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "smallvec 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "smallvec";
        version = "0.6.9";
        edition = "2015";
        sha256 = "0p96l51a2pq5y0vn48nhbm6qslbc6k8h28cxm0pmzkqmj7xynz6w";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0d3jsdz22wgjyxdakqnvdgmwjdvkximz50d9zfk4qlalw635qcvy";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];
        features = {
        };
      };
    "structopt 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "structopt";
        version = "0.2.15";
        edition = "2015";
        sha256 = "0hjkdq0zgaiigbqsqazaz4avp5q272kzivb2bfy6s5181240hv2z";
        authors = [
          "Guillaume Pinot <texitoi@texitoi.eu>"
          "others"
        ];
        dependencies = {
          "clap" = {
            packageId = "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "structopt-derive" = "structopt-derive 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "color" = [ "clap/color" ];
          "debug" = [ "clap/debug" ];
          "default" = [ "clap/default" ];
          "doc" = [ "clap/doc" ];
          "lints" = [ "clap/lints" ];
          "nightly" = [ "structopt-derive/nightly" ];
          "no_cargo" = [ "clap/no_cargo" ];
          "suggestions" = [ "clap/suggestions" ];
          "wrap_help" = [ "clap/wrap_help" ];
          "yaml" = [ "clap/yaml" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "structopt-derive 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "structopt-derive";
        version = "0.2.15";
        edition = "2015";
        sha256 = "09rg6993ckyaklribdcqnw2v3516afdl5pa0z21lwrwz0bvxsf2n";
        procMacro = true;
        authors = [
          "Guillaume Pinot <texitoi@texitoi.eu>"
        ];
        dependencies = {
          "heck" = "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro2" = "proc-macro2 0.4.29 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 0.15.33 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "nightly" = [ "proc-macro2/nightly" ];
        };
      };
    "syn 0.15.33 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "syn";
        version = "0.15.33";
        edition = "2015";
        sha256 = "19fv7nh1k3adh7dnbz45jg645v358n6kw8zf9xlhfcsc3532wy2j";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 0.4.29 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "quote" = {
            packageId = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "parsing" "printing" "proc-macro" "quote" "visit" ];
      };
    "synstructure 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "synstructure";
        version = "0.10.1";
        edition = "2015";
        sha256 = "0mx2vwd0d0f7hanz15nkp0ikkfjsx9rfkph7pynxyfbj45ank4g3";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.29 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 0.15.33 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" "extra-traits" ];
          };
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tera 1.0.0-beta.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tera";
        version = "1.0.0-beta.4";
        edition = "2018";
        sha256 = "0zn4f9drj4wnv7zsxwn8zqx4bhib30gizbx6wd1sgjhr34g633rd";
        authors = [
          "Vincent Prouillet <prouillet.vincent@gmail.com>"
        ];
        dependencies = {
          "chrono" = "chrono 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "globwalk" = "globwalk 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "humansize" = "humansize 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "pest" = "pest 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "pest_derive" = "pest_derive 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "regex" = "regex 1.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = "serde 1.0.90 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde_json" = "serde_json 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)";
          "slug" = "slug 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "unic-segment" = "unic-segment 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "url" = "url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "v_htmlescape" = "v_htmlescape 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "preserve_order" = [ "serde_json/preserve_order" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "termcolor 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "termcolor";
        version = "1.0.4";
        edition = "2015";
        sha256 = "0xydrjc0bxg08llcbcmkka29szdrfklk4vh6l6mdd67ajifqw1mv";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "wincolor" = {
            packageId = "wincolor 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
        };
        features = {
        };
      };
    "termion 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "termion";
        version = "1.5.2";
        edition = "2015";
        sha256 = "0a8znl9hdnr9d21xskb2q77r6pkvrabh71b43371vy9wq97m78d9";
        authors = [
          "ticki <Ticki@users.noreply.github.com>"
          "gycos <alexandre.bury@gmail.com>"
          "IGI-111 <igi-111@protonmail.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (!(target."os" == "redox"));
          };
          "numtoa" = {
            packageId = "numtoa 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          };
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.54 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "redox_termios" = {
            packageId = "redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
        };
        features = {
        };
      };
    "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0s25qh49n7kjayrdj4q3v0jk0jc6vy88rdw0bvgfxqlscpqpxi7d";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = {
          "unicode-width" = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "thread_local";
        version = "0.3.6";
        edition = "2015";
        sha256 = "02rksdwjmz2pw9bmgbb4c0bgkbq5z6nvg510sq1s6y2j1gam0c7i";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = {
          "lazy_static" = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "time";
        version = "0.1.42";
        edition = "2015";
        sha256 = "1ny809kmdjwd4b478ipc33dz7q6nq7rxk766x8cnrg6zygcksmmx";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "libc" = "libc 0.2.54 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.54 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi" ];
          };
        };
        features = {
        };
      };
    "toml 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "toml";
        version = "0.5.0";
        edition = "2015";
        sha256 = "0l2lqzbn5g9l376k01isq1nhb14inkr4c50qbjbdzh5qysz7dyk5";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "serde" = "serde 1.0.90 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "preserve_order" = [ "linked-hash-map" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "typenum";
        version = "1.10.0";
        edition = "2015";
        sha256 = "1v2cgg0mlzkg5prs7swysckgk2ay6bpda8m83c2sn3z77dcsx3bc";
        build = "build/main.rs";
        authors = [
          "Paho Lurie-Gregg <paho@paholg.com>"
          "Andre Bogus <bogusandre@gmail.com>"
        ];
        features = {
        };
      };
    "ucd-trie 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ucd-trie";
        version = "0.1.1";
        edition = "2015";
        sha256 = "12awmddm5d31whgd1q309gz1q8qa4i1h9fwf1h71k1d4ivxss68m";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "ucd-util 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ucd-util";
        version = "0.1.3";
        edition = "2015";
        sha256 = "1n1qi3jywq5syq90z9qd8qzbn58pcjgv1sx4sdmipm4jf9zanz15";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
        };
      };
    "unic-char-property 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unic-char-property";
        version = "0.9.0";
        edition = "2018";
        sha256 = "02q2nn58k4m4rpvyw0jyvskipvz80zi6hc5s9biancxx4c740fc6";
        authors = [
          "The UNIC Project Developers"
        ];
        dependencies = {
          "unic-char-range" = "unic-char-range 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "unic-char-range 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unic-char-range";
        version = "0.9.0";
        edition = "2018";
        sha256 = "04gm2jfbgaa5xcx60iiav2v10rl41j4zkkj3fcwhaw49z40dj6vi";
        authors = [
          "The UNIC Project Developers"
        ];
        features = {
          "unstable" = [ "exact-size-is-empty" "fused" "trusted-len" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unic-common 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unic-common";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1179jkf380fmlz1dnavzkkwx5nkk86ljbfq5kc1nyhz8bar9g9vc";
        authors = [
          "The UNIC Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unic-segment 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unic-segment";
        version = "0.9.0";
        edition = "2018";
        sha256 = "165nlhq8qymf24yhv6sfhs9xr6ag1a5n4sd25a7sj8kz7vbz98ll";
        authors = [
          "The UNIC Project Developers"
        ];
        dependencies = {
          "unic-ucd-segment" = "unic-ucd-segment 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "unic-ucd-segment 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unic-ucd-segment";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1wqw5fsyp4s1j5m4ks1aliqam0d1vw3d9qwhqnz1bsjs5hnkxwx7";
        authors = [
          "The UNIC Project Developers"
        ];
        dependencies = {
          "unic-char-property" = "unic-char-property 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "unic-char-range" = "unic-char-range 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "unic-ucd-version" = "unic-ucd-version 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "unic-ucd-version 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unic-ucd-version";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1z6dm8zhpznxfm07dizj397lrs9rha25g2hxdg05pb781kqi85rb";
        authors = [
          "The UNIC Project Developers"
        ];
        dependencies = {
          "unic-common" = "unic-common 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-bidi";
        version = "0.3.4";
        edition = "2015";
        sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
        libName = "unicode_bidi";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = {
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "flame_it" = [ "flame" "flamer" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-normalization";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1pb26i2xd5zz0icabyqahikpca0iwj2jd4145pczc4bb7p641dsz";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        dependencies = {
          "smallvec" = "smallvec 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "unicode-segmentation 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-segmentation";
        version = "1.2.1";
        edition = "2015";
        sha256 = "0pzydlrq019cdiqbbfq205cskxcspwi97zfdi02rma21br1kc59m";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
      };
    "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-width";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0886lc2aymwgy0lhavwn6s48ik3c61ykzzd3za6prgnw51j7bi4w";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-xid";
        version = "0.1.0";
        edition = "2015";
        sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "url";
        version = "1.7.2";
        edition = "2015";
        sha256 = "0qzrjzd9r1niv7037x4cgnv98fs1vj0k18lpxx890ipc47x5gc09";
        authors = [
          "The rust-url developers"
        ];
        dependencies = {
          "idna" = "idna 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "percent-encoding" = "percent-encoding 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "heap_size" = [ "heapsize" ];
          "query_encoding" = [ "encoding" ];
        };
      };
    "url_serde 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "url_serde";
        version = "0.2.0";
        edition = "2015";
        sha256 = "07ry87rw0pi1da6b53f7s3f52wx3ihxbcgjd4ldspfv5xh6wipsg";
        authors = [
          "The rust-url developers"
        ];
        dependencies = {
          "serde" = "serde 1.0.90 (registry+https://github.com/rust-lang/crates.io-index)";
          "url" = "url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "utf8-ranges 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "utf8-ranges";
        version = "1.0.2";
        edition = "2015";
        sha256 = "1my02laqsgnd8ib4dvjgd4rilprqjad6pb9jj9vi67csi5qs2281";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
        };
      };
    "v_escape 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "v_escape";
        version = "0.7.2";
        edition = "2018";
        sha256 = "05rhxmk2mzf1pcna4idilmhdqp95vdy2k3ixx7iqgncjidxkaiaw";
        authors = [
          "Rust-iendo Barcelona <riendocontributions@gmail.com>"
        ];
        dependencies = {
          "v_escape_derive" = "v_escape_derive 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "version_check" = "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "version_check" = "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "v_escape_derive 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "v_escape_derive";
        version = "0.5.3";
        edition = "2018";
        sha256 = "0wgyvapii8bnz2g52i3al5vycbiplr62bfmvlv2pplrj9ff40pv3";
        procMacro = true;
        authors = [
          "Rust-iendo Barcelona <riendocontributions@gmail.com>"
        ];
        dependencies = {
          "nom" = "nom 4.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro2" = "proc-macro2 0.4.29 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 0.15.33 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "v_htmlescape 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "v_htmlescape";
        version = "0.4.3";
        edition = "2018";
        sha256 = "09vma0ydjnah6j7d2s7yahx6bqri54pmxj84sv9wmggnidg3d0qx";
        authors = [
          "Rust-iendo Barcelona <riendocontributions@gmail.com>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "v_escape" = "v_escape 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "v_escape" = "v_escape 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "vec_map";
        version = "0.8.1";
        edition = "2015";
        sha256 = "1jj2nrg8h3l53d43rwkpkikq5a5x15ms4rf1rw92hp5lrqhi8mpi";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagavía <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "Félix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
    "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "version_check";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1yrx9xblmwbafw2firxyqbj8f771kkzfd24n3q7xgwiqyhi0y8qd";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];
        features = {
        };
      };
    "walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "walkdir";
        version = "2.2.7";
        edition = "2015";
        sha256 = "0wq3v28916kkla29yyi0g0xfc16apwx24py68049kriz3gjlig03";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "same-file" = "same-file 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "winnt" ];
          };
          "winapi-util" = {
            packageId = "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
        };
        features = {
        };
      };
    "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi";
        version = "0.3.7";
        edition = "2015";
        sha256 = "1k51gfkp0zqw7nj07y443mscs46icmdhld442s2073niap0kkdr8";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = {
          "winapi-i686-pc-windows-gnu" = {
            packageId = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          };
          "winapi-x86_64-pc-windows-gnu" = {
            packageId = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          };
        };
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "consoleapi" "dbghelp" "errhandlingapi" "fileapi" "minwinbase" "minwindef" "ntdef" "ntsecapi" "processenv" "processthreadsapi" "profileapi" "std" "sysinfoapi" "timezoneapi" "winbase" "wincon" "winerror" "winnt" ];
      };
    "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-util";
        version = "0.1.2";
        edition = "2015";
        sha256 = "07jj7rg7nndd7bqhjin1xphbv8kb5clvhzpqpxkvm3wl84r3mj1h";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "consoleapi" "errhandlingapi" "fileapi" "minwindef" "processenv" "winbase" "wincon" "winerror" "winnt" ];
          };
        };
        features = {
        };
      };
    "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "wincolor 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "wincolor";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0gr7v4krmjba7yq16071rfacz42qbapas7mxk5nphjwb042a8gvz";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "minwindef" "wincon" ];
          };
          "winapi-util" = "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
  };

  #
  # crate2nix/default.nix (excerpt start)
  # 

  # Target (platform) data for conditional dependencies.
  # This corresponds to what buildRustCrate is setting.
  target = {
      unix = true;
      windows = false;

      # This doesn't appear to be officially documented anywhere yet.
      # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
      os = if stdenv.hostPlatform.isDarwin
        then "macos"
        else stdenv.hostPlatform.parsed.kernel.name;
      arch = stdenv.hostPlatform.parsed.cpu.name;
      family = "unix";
      env = "gnu";
      endian = if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian" then "little" else "big";
      pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
      vendor = stdenv.hostPlatform.parsed.vendor.name;
      debug_assertions = false;
  };

  /* Filters common temp files and build files */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let baseName = builtins.baseNameOf (builtins.toString name);
    in ! (
      # Filter out git
      baseName == ".gitignore" ||
      (type == "directory" && baseName == ".git" ) ||

      # Filter out build results
      (type == "directory" && (
        baseName == "target" ||
        baseName == "_site" ||
        baseName == ".sass-cache" ||
        baseName == ".jekyll-metadata" ||
        baseName == "build-artifacts"
        )) ||

      # Filter out nix-build result symlinks
      (type == "symlink" && lib.hasPrefix "result" baseName) ||

      # Filter out IDE config
      (type == "directory" && (
        baseName == ".idea" ||
        baseName == ".vscode"
        )) ||
      lib.hasSuffix ".iml" baseName ||

      # Filter out nix build files
      # lib.hasSuffix ".nix" baseName ||

      # Filter out editor backup / swap files.
      lib.hasSuffix "~" baseName ||
      builtins.match "^\\.sw[a-z]$$" baseName != null ||
      builtins.match "^\\..*\\.sw[a-z]$$" baseName != null ||
      lib.hasSuffix ".tmp" baseName ||
      lib.hasSuffix ".bak" baseName
    );

  /* A restricted overridable version of  buildRustCrateWithFeaturesImpl. */
  buildRustCrateWithFeatures = {packageId, features}:
    lib.makeOverridable
      ({features}: buildRustCrateWithFeaturesImpl {inherit packageId features;})
      { inherit features; };

  /* Returns a buildRustCrate derivation for the given packageId and features. */
  buildRustCrateWithFeaturesImpl = { crateConfigs? crates, packageId, features } @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let mergedFeatures = mergePackageFeatures args;
        buildByPackageId = packageId:
          let features = mergedFeatures."${packageId}" or [];
              crateConfig = lib.filterAttrs (n: v: n != "resolvedDefaultFeatures") crateConfigs."${packageId}";
              dependencies =
                dependencyDerivations buildByPackageId features (crateConfig.dependencies or {});
              buildDependencies =
                dependencyDerivations buildByPackageId features (crateConfig.buildDependencies or {});
              dependenciesWithRenames =
                lib.filterAttrs (n: v: v ? "rename")
                  (crateConfig.buildDependencies or {} // crateConfig.dependencies or {});
              crateRenames =
                lib.mapAttrs (name: value: value.rename or name) dependenciesWithRenames;
          in buildRustCrate (crateConfig // { inherit features dependencies buildDependencies crateRenames; });
    in buildByPackageId packageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations = buildByPackageId: features: dependencies:
    assert (builtins.isFunction buildByPackageId);
    assert (builtins.isList features);
    assert (builtins.isAttrs dependencies);

    let enabledDependencies = filterEnabledDependencies dependencies features;
        depDerivation = dependencyName: dependency:
        buildByPackageId (dependencyPackageId dependency);
    in builtins.attrValues (lib.mapAttrs depDerivation enabledDependencies);

  /* Returns differences between cargo default features and crate2nix default features.
   *
   * This is useful for verifying the feature resolution in crate2nix.
   */
  diffDefaultPackageFeatures = {crateConfigs ? crates, packageId}:
    assert (builtins.isAttrs crateConfigs);

    let prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures {inherit crateConfigs packageId; features = ["default"]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo = builtins.attrNames (lib.filterAttrs (n: v: !(v ? "crate2nix" ) && (v ? "cargo")) combined);
        onlyInCrate2Nix = builtins.attrNames (lib.filterAttrs (n: v: (v ? "crate2nix" ) && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (n: v:
          (v ? "crate2nix" )
          && (v ? "cargo")
          && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or []))
          combined;
    in builtins.toJSON { inherit onlyInCargo onlyInCrate2Nix differentFeatures; };

  /* Returns the feature configuration by package id for the given input crate. */
  mergePackageFeatures = {crateConfigs ? crates, packageId, features} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let packageFeatures = listOfPackageFeatures args;
        grouped = lib.groupBy (x: x.packageId) packageFeatures;
    in lib.mapAttrs (n: v: sortedUnique (builtins.concatLists (builtins.map (v: v.features) v))) grouped;

  /* Returns a { packageId, features } attribute set for every package needed for building the
     package for the given packageId with the given features.

     Returns multiple, potentially conflicting attribute sets for dependencies that are reachable
     by multiple paths in the dependency tree.
  */
  listOfPackageFeatures = {crateConfigs ? crates, packageId, features, dependencyPath? [packageId]} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependencyName: dependency:
          let packageId = dependencyPackageId dependency;
              features = dependencyFeatures expandedFeatures dependencyName dependency;
          in { inherit packageId features; };

        resolveDependencies = path: dependencies:
          assert (builtins.isAttrs dependencies);

          let enabledDependencies = filterEnabledDependencies dependencies expandedFeatures;
              directDependencies =
                builtins.attrValues (lib.mapAttrs depWithResolvedFeatures enabledDependencies);
          in builtins.concatMap
            ({packageId, features}: listOfPackageFeatures {
              # This is purely for debugging.
              dependencyPath = dependencyPath ++ [path packageId];
              inherit crateConfigs packageId features;
            })
             directDependencies;

        resolvedDependencies = builtins.concatLists
          [
            (resolveDependencies "dependencies" (crateConfig.dependencies or {}))
            (resolveDependencies "buildDependencies" (crateConfig.buildDependencies or {}))
          ];

    in [{inherit packageId; features = expandedFeatures;}] ++ resolvedDependencies;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = dependencies: features:
    assert (builtins.isAttrs dependencies);
    assert (builtins.isList features);

    lib.filterAttrs
      (depName: dep:
        builtins.isString dep
        || dep.target or true
        && (!(dep.optional or false) || builtins.any (doesFeatureEnableDependency depName) features))
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = depName: feature:
    let prefix = "${depName}/";
        len = builtins.stringLength prefix;
        startsWithPrefix = builtins.substring 0 len feature == prefix;
    in feature == depName || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further feature names to enable in case this
     feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);

    let expandFeature = feature:
          assert (builtins.isString feature);
          [feature] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
        outFeatures = builtins.concatMap expandFeature inputFeatures;
    in sortedUnique outFeatures;

  /* The package ID of the given dependency. */
  dependencyPackageId = dependency: if builtins.isString dependency then dependency else dependency.packageId;

  /* Returns the actual dependencies for the given dependency. */
  dependencyFeatures = features: dependencyName: dependency:
    assert (builtins.isList features);
    assert (builtins.isString dependencyName);
    assert (builtins.isAttrs dependency || builtins.isString dependency);

    let defaultOrNil = if builtins.isString dependency || dependency.usesDefaultFeatures or true
                       then ["default"]
                       else [];
        explicitFeatures = if builtins.isString dependency then [] else dependency.features or [];
        additionalDependencyFeatures =

          let dependencyPrefix = dependencyName+"/";
              dependencyFeatures =
                builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
          in builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);

    let outFeaturesSet = lib.foldl (set: feature: set // {"${feature}" = 1;} ) {} features;
        outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in builtins.sort (a: b: a < b) outFeaturesUnique;

  #
  # crate2nix/default.nix (excerpt end)
  # 

}
